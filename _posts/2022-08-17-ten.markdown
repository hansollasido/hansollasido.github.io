---
title:  "2022-08-17"
date:   2022-08-17 15:04:23
categories: [python 공부]
tags: [python 공부]
---

### 나도코딩 강의

간단하게 mouse를 4군데 클릭하여 나타내고 클릭한 점을 토대로 회전된 이미지를 제대로 나타내주는 프로젝트를 진행하였다.


``` python
import cv2
import numpy as np

point_list = []
src_img = cv2.imread('poker.jpg')

COLOR = (255,0,255) # 핑크
THICKNESS = 3
drawing = False # 선을 그릴지 여부

def mouse_handler(event, x, y, flags, param):
    global drawing
    dst_img = src_img.copy()
    
    if event == cv2.EVENT_LBUTTONDOWN: # 마우스 왼쪽 버튼 Down
        drawing = True # 선을 그리기 시작
        point_list.append((x,y))
    
    if drawing:
        prev_point = None # 직선의 시작점
        for point in point_list:
            cv2.circle(dst_img, point, 15, COLOR, cv2.FILLED)
            if prev_point:
                cv2.line(dst_img, prev_point, point, COLOR, THICKNESS, cv2.LINE_AA)
            prev_point = point
        
        next_point = (x,y)
        if len(point_list) == 4:
            show_result() # 결과 출력
            next_point = point_list[0] # 첫 번째 클릭한 지점
        
        cv2.line(dst_img, prev_point, next_point, COLOR, THICKNESS, cv2.LINE_AA)
       
        
    cv2.imshow('img',dst_img)
        
def show_result():
    width, height = 530, 710 

    src = np.float32(point_list)
    # input 4개 지점

    dst = np.array([[0, 0], [width, 0], [width, height], [0, height]], dtype=np.float32)
    # Output 4개 지점

    matrix = cv2.getPerspectiveTransform(src, dst) # Matrix 얻어옴
    result = cv2.warpPerspective(src_img, matrix, (width, height)) # matrx 대로 변환을 함
    cv2.imshow('result',result)
        
cv2.namedWindow('img') # img란 이름의 윈도우를 먼저 만들어두는 것, 여기에 마우스 이벤트를 처리하기 위한 핸들러 적용
cv2.setMouseCallback('img',mouse_handler)
cv2.imshow('img',src_img)
cv2.waitKey(0)
cv2.destroyAllWindows()
```

![image.png](../../images/081701.png)

---

**국민대 갈 준비**

국민대 기숙사 입실할 준비를 해야한다.

한 동안 집에 오지않기 때문에 국민대에서 내내 지내야한다.

집이 그립겠지만 대회가 우선이니 ....

근데 잘하는 팀들 너무 많다고 해서 조금 무섭다.

잘하는 팀들 가운데에서도 우리팀이 수상했으면 좋겠다.
